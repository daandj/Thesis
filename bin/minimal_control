#!/usr/bin/env python

import sys
import means as m # type: ignore
import numpy as np

import cbt.games.minimal as mg

def main(size: int) -> int:
    if size == 10:
        means = m.means_10_10
    elif size == 20:
        means = m.means_20_20
    else:
        raise ValueError("Invalid size. Use 10 or 20.")
    print("Means")
    game = mg.Minimal(means=means)
    game.print_means()
    min_max(means)

    iterations = 100000

    print("Results")
    ucb_player = mg.UCBMinimalPlayer(0, data_flag=True, print_flag=False)
    ucb_player.iterations = iterations
    ucb_player.make_move(game)
    return 0

def min_max(means: np.ndarray) -> int:
    print(f"minmax={means.min(axis=1).max()}", file=sys.stderr)
    return 0

if __name__ == '__main__':
    s = int(sys.argv[1])

    sys.exit(main(s))
